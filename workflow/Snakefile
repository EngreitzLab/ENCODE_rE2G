from snakemake.utils import min_version
min_version("7.0")

configfile: "config/config.yml"
conda: "mamba"

RESULTS_DIR = config["results_dir"]

NUM_CANDIDATE_ENH_GENE = os.path.join(RESULTS_DIR, "NumCandidateEnhGene.txt")
NUM_TSS_ENH_GENE = os.path.join(RESULTS_DIR, "NumTSSEnhGene.txt")
NUM_ENHANCERS_EG_5KB = os.path.join(RESULTS_DIR, "NumEnhancersEG5kb.txt")
SUM_ENHANCERS_EG_5KB = os.path.join(RESULTS_DIR, "SumEnhancersEG5kb.txt")
NUM_ENHANCERS_EG_10KB = os.path.join(RESULTS_DIR, "NumEnhancersEG10kb.txt")
SUM_ENHANCERS_EG_10KB = os.path.join(RESULTS_DIR, "SumEnhancersEG10kb.txt")


rule all:
	input: 
		NUM_CANDIDATE_ENH_GENE,
		NUM_TSS_ENH_GENE,
		NUM_ENHANCERS_EG_5KB,
		SUM_ENHANCERS_EG_5KB,
		os.path.join(RESULTS_DIR, "feature_tables/DNaseOnly_features.tsv.gz")

# create DNase-only feature table
rule dnase_only_features:
	input:
		feature_config = "config/feature_config.tsv",
		abc = config['abc_predictions'],
		NumCandidateEnhGene = NUM_CANDIDATE_ENH_GENE,
		NumTSSEnhGene = NUM_TSS_ENH_GENE,
		NumEnhancersEG5kb = NUM_ENHANCERS_EG_5KB,
		SumEnhancersEG5kb = SUM_ENHANCERS_EG_5KB,
		ubiqExprGenes = config["ubiq_expr_genes"]
	output: 
		dnase_feature_tsv = os.path.join(RESULTS_DIR, "feature_tables/DNaseOnly_features.tsv.gz")
	conda:
		"envs/encode_e2g_features.yml"
	script:
		"scripts/dnase_only_features.R"

# overlap DNase-only feature table table with K562 CRISPR data
rule overlap_dnase_only_features_crispr:
	input:
		features = os.path.join(RESULTS_DIR, "feature_tables/DNaseOnly_features.tsv.gz"),
		crispr = config['crispr_dataset'],
		config = config['feature_config'],
		tss = config['gene_TSS500']
	output: 
		os.path.join(RESULTS_DIR, "EPCrisprBenchmark_ensemble_data_GRCh38.K562_DNaseOnly_features_NAfilled.tsv.gz")
	params:
		filter_genes = "none"
	conda:
		"envs/encode_e2g_features.yml" 
	script:
		"scripts/overlap_features_with_crispr_data.R"


rule gen_new_features: 
	input:
		abc_predictions = config['abc_predictions'],
		enhancer_list = config['enhancer_list'],
	params:
		gene_TSS500 = config['gene_TSS500'],
		chr_sizes = config['chr_sizes']
	conda:
		"envs/encode_e2g_features.yml"
	output: 
		NUM_CANDIDATE_ENH_GENE,
		NUM_TSS_ENH_GENE,
		NUM_ENHANCERS_EG_5KB,
		SUM_ENHANCERS_EG_5KB,
		NUM_ENHANCERS_EG_10KB,
		SUM_ENHANCERS_EG_10KB,
	shell: 
		""" 
		python workflow/scripts/gen_new_features.py \
			--enhancer_list {input.enhancer_list} \
			--abc_predictions {input.abc_predictions} \
			--ref_gene_tss {params.gene_TSS500} \
			--chr_sizes {params.chr_sizes} \
			--results_dir {RESULTS_DIR}
		"""